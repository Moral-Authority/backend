package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"

	"github.com/Moral-Authority/backend/database"
	"github.com/Moral-Authority/backend/graph/model"
	"github.com/Moral-Authority/backend/handlers"
)

// AddImage is the resolver for the addImage field.
func (r *mutationResolver) AddImage(ctx context.Context, input model.AddImage) (*model.Image, error) {
	dbService := database.ImageDbServiceImpl{}
	image, err := handlers.ImageDbService{}.AddImage(dbService, input)
	if err != nil {
		return nil, err
	}

	return image, nil
}

// UpdateImage is the resolver for the UpdateImage field.
func (r *mutationResolver) UpdateImage(ctx context.Context, input model.UpdateImage) (*model.Image, error) {
	dbService := database.ImageDbServiceImpl{}
	image, err := handlers.ImageDbService{}.UpdateImage(dbService, input)
	if err != nil {
		return nil, err
	}
	return image, nil
}
