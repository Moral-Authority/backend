package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"

	"github.com/Moral-Authority/backend/database"
	"github.com/Moral-Authority/backend/graph/model"
	"github.com/Moral-Authority/backend/handlers"
)

// AddUserFav is the resolver for the addUserFav field.
func (r *mutationResolver) AddUserFav(ctx context.Context, request model.AddUserFav) ([]*model.Favorite, error) {
	image, err := handlers.UserService{}.AddUserFav(request, database.UserDbServiceImpl{}, database.ProductDbServiceImpl{})
	if err != nil {
		return nil, err
	}

	return image, nil
}

// RemoveUserFav is the resolver for the removeUserFav field.
func (r *mutationResolver) RemoveUserFav(ctx context.Context, request model.RemoveUserFav) ([]*model.Favorite, error) {
	image, err := handlers.UserService{}.RemoveUserFav(request, database.UserDbServiceImpl{}, database.ProductDbServiceImpl{})
	if err != nil {
		return nil, err
	}

	return image, nil
}
