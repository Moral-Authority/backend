extend type Mutation {
    addCertification(input: AddCertification!): Certification!
    updateCertification(input: UpdateCertification!): Certification!
}

extend type Query {
    getAllCertifications: [Certification]!
    GetCertificationById(id string) (*models.Certification, error)
    GetCertificationsByFilter(filters map[string]interface{}) ([]models.Certification, error)
}


input UpdateCertification {
    ID: String!
    Name: String
    Logo: String
    Website: String
    Description: String
    CertifiesCompany: Boolean
    CertifiesProduct: Boolean
    CertifiesProcess: Boolean
    CertifierContactID: String
    Industry: String
    Certifier: String
    Audited: Boolean
    Auditor: String
    Region: String
    Qualifiers: String
    Sources: String
}

input AddCertification {
    Name: String
    Logo: String
    Website: String
    Description: String
    CertifiesCompany: Boolean
    CertifiesProduct: Boolean
    CertifiesProcess: Boolean
    CertifierContactID: String
    Industry: String
    Certifier: String
    Audited: Boolean
    Auditor: String
    Region: String
    Qualifiers: String
    Sources: String
}

type Certification {
    _id: String!
    Name: String!
    Logo: String
    Website: String
    Description: String
    CertifiesCompany: Boolean
    CertifiesProduct: Boolean
    CertifiesProcess: Boolean
    CertifierContactID: String
    Industry: String
    Certifier: String
    Audited: Boolean
    Auditor: String
    Region: String
    Qualifiers: String
    Sources: String
    CreatedAt: String
    UpdatedAt: String
}