extend type Query {
  getSubDepartmentFilters(department: String!, subDepartment: String!): Filters!
  getProductsByFilter(filter: ProductFilterInput, department: String!, subDepartment: String!): [Product]
}

type Filters {
  Price: PriceRange
  Rating: Int
  Companies: [String]
  CompanyCertifications: [String]
  ProductCertifications: [String]
}

type PriceRange {
  min: Float
  max: Float
}

enum Department {
  HomeGarden
  ClothingAccessories
  HealthBathBeauty
  ToysKidsBabies
}


input ProductFilterInput {
  priceRange: PriceRangeInput
  companyCertifications: [String]
  productCertifications: [String]
  companies: [String]
}

input PriceRangeInput {
  min: Float
  max: Float
}