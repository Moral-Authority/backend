

extend type Mutation {
    addCategory(input: AddCategory!): Section!
}

extend type Query {
    getAllCategories:[Section]!
}

# ======= INPUTS ======

input AddCategory {
    Name: String!
    ParentId: String!
    CategoryType: CategoryEnum!
}

enum CategoryEnum {
    Section, Subsection, Department, Category, SubCategory, Type, SubType
}

# ======= TYPES ======
type Section {
    _id: String!
    Title: String!
    SubSections: [SubSection]
}

type SubSection {
    _id: String!
    Title: String!
    Departments: [Department]
}

type Department {
    _id: String!
    Title: String!
    Categories: [Category]
}


type Category {
    _id: String!
    Title: String!
    SubCategories: [SubCategory]
}

type SubCategory {
    _id: String!
    Title: String!
    Types: [Type]
}

type Type {
    _id: String!
    Title: String!
    SubTypes: [SubType]
}

type SubType {
    _id: String!
    Title: String!
}

#enum FilterType {
#    color, style, shape, material, setting, scent, pattern, chainType, closureType, cutType, gemstone, location,
#    holiday, occasion, size, mount, fillMaterial, height, length
#}

